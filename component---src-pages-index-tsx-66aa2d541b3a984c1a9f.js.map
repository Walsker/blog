{"version":3,"sources":["webpack:///./.yarn/unplugged/core-js-npm-2.6.11-15178ded27/node_modules/core-js/modules/es6.string.link.js","webpack:///./src/pages/work/saving-cindi/saving-cindi-preview.jpg","webpack:///./src/components/contactPrompt/loadingSpinner.tsx","webpack:///./src/components/contactPrompt/form.tsx","webpack:///./src/components/contactPrompt/index.tsx","webpack:///./src/components/card.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/pages/work/cuhacking/cuHacking-preview.jpg","webpack:///./src/components/button.tsx","webpack:///./src/pages/work/ribbon-communications/ribbon-preview.svg","webpack:///./.yarn/unplugged/core-js-npm-2.6.11-15178ded27/node_modules/core-js/modules/_string-html.js","webpack:///./src/pages/work/cuhacking-2020/cuHacking-2020-preview.jpg"],"names":["createHTML","url","this","module","exports","LoadingSpinner","props","width","height","viewBox","stroke","fill","fillRule","color","strokeWidth","cx","cy","r","attributeName","begin","dur","values","calcMode","keyTimes","keySplines","repeatCount","containerStyle","css","FormContainer","styled","form","RegularContainer","Field","label","Input","input","TextArea","textarea","Button","button","FormMessage","p","Form","useState","formState","setFormState","theme","action","method","onSubmit","event","preventDefault","currentTarget","formData","FormData","xhr","XMLHttpRequest","console","log","open","onload","status","reset","send","id","required","name","type","rows","StyledDiv","div","Dialogue","ContactPrompt","children","cardStyle","LinkContainer","Link","bkg","AnchorContainer","a","Header","ThemeDisplay","ThemeDot","Card","linkProps","link","external","target","rel","href","preview","themeColors","map","i","key","icon","faExternalLinkAlt","size","title","subtitle","to","Introduction","NameText","IntroText","WorkContainer","h1","CardList","WorkPage","cuHacking","cuHacking2020","ribbon","savingCindi","genericButton","DisabledButton","enabledButton","StyledButton","whiteTextHover","StyledLink","StyledAnchor","StyledIcon","FontAwesomeIcon","disabled","download","className","faDownload","onClick","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"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","file":"component---src-pages-index-tsx-66aa2d541b3a984c1a9f.js","sourcesContent":["'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","module.exports = __webpack_public_path__ + \"static/saving-cindi-preview-c5af5460e2de77b3f86f1ee2a2cf85d3.jpg\";","// By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL\n// Modified to support a color prop\n\nimport React from 'react'\n\nconst LoadingSpinner = (props: { color: string }) => {\n  return (\n    <svg width={44} height={44} viewBox='0 0 44 44' stroke='#fff' {...props}>\n      <g fill='none' fillRule='evenodd' stroke={props.color} strokeWidth={2}>\n        <circle cx={22} cy={22} r={1}>\n          <animate\n            attributeName='r'\n            begin='0s'\n            dur='1.8s'\n            values='1; 20'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.165, 0.84, 0.44, 1'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='stroke-opacity'\n            begin='0s'\n            dur='1.8s'\n            values='1; 0'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.3, 0.61, 0.355, 1'\n            repeatCount='indefinite'\n          />\n        </circle>\n        <circle cx={22} cy={22} r={1}>\n          <animate\n            attributeName='r'\n            begin='-0.9s'\n            dur='1.8s'\n            values='1; 20'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.165, 0.84, 0.44, 1'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='stroke-opacity'\n            begin='-0.9s'\n            dur='1.8s'\n            values='1; 0'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.3, 0.61, 0.355, 1'\n            repeatCount='indefinite'\n          />\n        </circle>\n      </g>\n    </svg>\n  )\n}\n\nexport default LoadingSpinner\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { ThemeColor } from 'src/types'\nimport LoadingSpinner from './loadingSpinner'\n\nconst containerStyle = css`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  padding: 5vw;\n  width: calc(var(--mobile-width) - 10vw);\n  min-height: 420px;\n\n  @media only screen and (min-width: 700px) {\n    padding: 35px 40px;\n    width: 300px;\n    min-height: 460px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 355px;\n  }\n`\n\nconst FormContainer = styled.form<{ color: string }>`\n  ${containerStyle}\n  align-items: flex-start;\n  justify-content: space-between;\n\n  background-color: ${(props) => props.color};\n`\n\nconst RegularContainer = styled.form<{ color: string }>`\n  ${containerStyle}\n  align-items: center;\n  justify-content: center;\n\n  background-color: ${(props) => props.color};\n\n  /* color: var(--white); */\n  color: ${(props) => (props.color === 'var(--yellow)' ? `var(--black)` : `var(--white)`)};\n`\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  width: 100%;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1rem;\n  font-weight: 600;\n`\n\nconst Input = styled.input`\n  margin: 5px 0;\n  padding: 0.5rem;\n\n  border: 2px solid var(--black);\n  border-radius: 0;\n  background-color: #ffffff;\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n`\n\nconst TextArea = styled.textarea`\n  resize: none;\n  margin-top: 5px;\n  margin-bottom: -5px;\n  padding: 0.5rem;\n\n  border: 2px solid var(--black);\n  border-radius: 0;\n  background-color: #ffffff;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1.125rem;\n`\n\nconst Button = styled.button<{ color: string }>`\n  margin-top: 5vw;\n  padding: 0.75rem 1rem;\n\n  border: 2px solid var(--text);\n  background-color: var(--bkg);\n  color: var(--text);\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n  font-weight: 600;\n\n  transition: 0.1s ease-in;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => props.color};\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-top: 35px;\n  }\n`\nconst FormMessage = styled.p`\n  text-align: center;\n  font-size: 1.125rem;\n\n  @media only screen and (min-width: 700px) {\n    font-size: 1.4rem;\n  }\n`\n\ninterface Props {\n  theme: ThemeColor\n}\n\nconst Form = (props: Props) => {\n  const [formState, setFormState] = useState<'idle' | 'loading' | 'submitted' | 'failed'>('idle')\n\n  // See: https://usebasin.com/docs/features/ajax\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    setFormState('loading')\n\n    const { currentTarget: form } = event\n\n    let formData = new FormData(form)\n    let xhr = new XMLHttpRequest()\n\n    console.log('data:', formData)\n    xhr.open('POST', form.action, true)\n\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        setFormState('submitted')\n        form.reset()\n      } else {\n        setFormState('failed')\n      }\n    }\n\n    xhr.send(formData)\n  }\n\n  switch (formState) {\n    case 'idle':\n      return (\n        <FormContainer\n          color={`var(--${props.theme})`}\n          action='https://usebasin.com/f/9d85adb927f2'\n          method='POST'\n          onSubmit={submitForm}\n          id='blog-contact-form'\n        >\n          <Field>\n            Name\n            <Input required name='name' type='text' />\n          </Field>\n          <Field>\n            Email\n            <Input required name='email' type='email' />\n          </Field>\n          <Field>\n            Message\n            <TextArea required name='message' rows={7}></TextArea>\n          </Field>\n          <Button type='submit' color={`var(--${props.theme})`}>\n            Send Message\n          </Button>\n        </FormContainer>\n      )\n    case 'loading':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <LoadingSpinner color={props.theme === 'yellow' ? `var(--black)` : `var(--white)`} />\n        </RegularContainer>\n      )\n    case 'submitted':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <FormMessage>\n            Thanks!\n            <br />\n            We'll be in touch. 🙂\n          </FormMessage>\n        </RegularContainer>\n      )\n    case 'failed':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <FormMessage>\n            Something went wrong. 😶\n            <br />\n            Please try again later.\n          </FormMessage>\n        </RegularContainer>\n      )\n  }\n}\n\nexport default Form\n","import React from 'react'\nimport styled from 'styled-components'\nimport Form from './form'\n\nimport { ThemeColor } from 'src/types'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: var(--mobile-width);\n  margin-top: 75px;\n  margin-bottom: 50px;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    margin-top: 150px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst Dialogue = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  margin-bottom: 50px;\n\n  h1 {\n    margin: 0;\n    font-family: 'Inter', sans-serif;\n  }\n\n  p {\n    margin: 20px 0;\n\n    font-family: 'Open Sans', sans-serif;\n    font-size: 1.25rem;\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-right: 5vw;\n\n    p {\n      margin: 10px 0 30px;\n      font-size: 1.5rem;\n    }\n  }\n`\n\ninterface Props {\n  theme: ThemeColor\n  children: React.ReactNode\n}\n\nconst ContactPrompt = (props: Props) => (\n  <StyledDiv>\n    <Dialogue>{props.children}</Dialogue>\n    <Form theme={props.theme} />\n  </StyledDiv>\n)\n\nexport default ContactPrompt\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst cardStyle = css`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  margin-bottom: 5vw;\n  padding: 5vw;\n\n  border: 2px solid var(--black);\n\n  background-position: center;\n  background-size: cover;\n\n  background-color: rgba(255, 255, 255, 0.5);\n  background-blend-mode: overlay;\n\n  transition: 0.1s ease-in;\n\n  h1 {\n    margin: 0;\n    font-family: 'Inter', sans-serif;\n    font-weight: 800;\n    font-size: 2rem;\n  }\n\n  h2 {\n    margin: 0;\n    font-family: 'Open Sans', sans-serif;\n    font-weight: 500;\n    font-size: 1.1rem;\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-bottom: 20px;\n    padding: 33px 38px;\n\n    background-color: #ffffff;\n\n    &:hover {\n      background-color: rgba(255, 255, 255, 0.5);\n    }\n\n    h1 {\n      font-size: 2.25rem;\n    }\n\n    h2 {\n      font-size: 1.375rem;\n      color: var(--grey);\n    }\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 510px;\n  }\n`\n\nconst LinkContainer = styled(Link)<{ bkg: string }>`\n  ${cardStyle}\n\n  @media only screen and (min-width: 700px) {\n    background-image: ${(props) => `url(${props.bkg})`};\n  }\n`\n\nconst AnchorContainer = styled.a<{ bkg: string }>`\n  ${cardStyle}\n\n  @media only screen and (min-width: 700px) {\n    background-image: ${(props) => `url(${props.bkg})`};\n  }\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`\n\nconst ThemeDisplay = styled.div`\n  overflow: visible;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 20px;\n`\n\nconst ThemeDot = styled.div<{ color: string }>`\n  width: 20px;\n  height: 20px;\n\n  border: 2px solid var(--black);\n  border-radius: 100%;\n  margin-right: 20px;\n\n  background-color: ${(props) => props.color};\n\n  @media only screen and (min-width: 700px) {\n    width: 25px;\n    height: 25px;\n    margin-right: 25px;\n  }\n`\n\ninterface CardProps {\n  title: string\n  subtitle: string\n  themeColors: Array<string>\n  preview: string\n  linkProps: {\n    link: string\n    external: boolean\n  }\n}\n\nconst Card = ({ linkProps = { link: '/', external: false }, ...props }: CardProps) => {\n  if (linkProps.external) {\n    return (\n      <AnchorContainer target='_blank' rel='noopener noreferrer external' href={linkProps.link} bkg={props.preview}>\n        <Header>\n          <ThemeDisplay>\n            {props.themeColors.map((color, i) => (\n              <ThemeDot key={i} color={color} />\n            ))}\n          </ThemeDisplay>\n          <FontAwesomeIcon icon={faExternalLinkAlt} size='lg' />\n        </Header>\n        <h1>{props.title}</h1>\n        <h2>{props.subtitle}</h2>\n      </AnchorContainer>\n    )\n  } else {\n    return (\n      <LinkContainer to={linkProps.link} bkg={props.preview}>\n        <ThemeDisplay>\n          {props.themeColors.map((color, i) => (\n            <ThemeDot key={i} color={color} />\n          ))}\n        </ThemeDisplay>\n        <h1>{props.title}</h1>\n        <h2>{props.subtitle}</h2>\n      </LinkContainer>\n    )\n  }\n}\n\nexport default Card\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Button, ContactPrompt, Layout, SEO } from 'components'\nimport Card from 'components/card'\n\nimport cuHacking from './work/cuhacking/cuHacking-preview.jpg'\nimport cuHacking2020 from './work/cuhacking-2020/cuHacking-2020-preview.jpg'\nimport ribbon from './work/ribbon-communications/ribbon-preview.svg'\nimport savingCindi from './work/saving-cindi/saving-cindi-preview.jpg'\n\nconst Introduction = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: var(--mobile-width);\n  margin-bottom: 100px;\n\n  @media only screen and (min-width: 1200px) {\n    flex-direction: row;\n    max-width: var(--desktop-width);\n  }\n`\n\nconst NameText = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  background-color: var(--red);\n  color: var(--white);\n\n  font-family: 'Inter', sans-serif;\n  font-size: 2rem;\n  font-weight: 300;\n\n  margin: 16px 0;\n  padding: 5vw;\n\n  span {\n    font-size: 4rem;\n    font-weight: 900;\n  }\n\n  p {\n    margin: 0;\n    color: var(--black);\n\n    font-family: 'Open Sans', sans-serif;\n    font-size: 1rem;\n    font-weight: normal;\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin: 0;\n    padding: 35px 40px;\n\n    font-size: 3rem;\n\n    span {\n      font-size: 8rem;\n    }\n\n    p {\n      font-size: 1.5rem;\n    }\n  }\n\n  @media only screen and (min-width: 1200px) {\n    flex-shrink: 0;\n    font-size: 4rem;\n\n    span {\n      font-size: 9rem;\n    }\n  }\n`\n\nconst IntroText = styled.p`\n  strong {\n    color: var(--red);\n    font-weight: normal;\n  }\n\n  @media only screen and (min-width: 700px) {\n    font-size: 1.5rem;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    padding-left: 40px;\n    font-size: 2rem;\n    margin: 0;\n  }\n`\n\nconst WorkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: var(--mobile-width);\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst Header = styled.h1`\n  align-self: flex-start;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1.5rem;\n  font-weight: bold;\n\n  @media only screen and (min-width: 700px) {\n    font-size: 2rem;\n  }\n`\n\nconst CardList = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: var(--mobile-width);\n\n  @media only screen and (min-width: 1200px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    max-width: var(--desktop-width);\n  }\n`\n\nconst WorkPage = () => (\n  <Layout>\n    <SEO />\n    <Introduction>\n      <NameText>\n        Hi, I'm\n        <br />\n        <span>Wal Wal.</span>\n        <p>Nice of you to drop by! 👋🏿 </p>\n      </NameText>\n      <IntroText>\n        A <strong>fullstack developer</strong> who loves collaborating with others to create solutions that solve\n        real-world and everyday problems.✊🏿\n        <br />\n        <br />\n        Currently looking for more opportunities! 💼\n      </IntroText>\n    </Introduction>\n    <WorkContainer>\n      <Header>Recent Works</Header>\n      <CardList>\n        <Card\n          title='Developing for the Community at cuHacking'\n          subtitle='Director of Development | cuHacking'\n          themeColors={['#00D0FE', '#7C39BF', '#280749']}\n          preview={cuHacking}\n          linkProps={{\n            link: '/work/cuhacking',\n            external: false\n          }}\n        />\n        <Card\n          title='Leading Developers at cuHacking'\n          subtitle='Director of Development | cuHacking 2020'\n          themeColors={['#7C39BF', '#280749']}\n          preview={cuHacking2020}\n          linkProps={{\n            link: '/work/cuhacking-2020',\n            external: false\n          }}\n        />\n        <Card\n          title='Interning at Ribbon Communications'\n          subtitle='Software Developer (Intern) | Ribbon'\n          themeColors={['#FF007F', '#C0059E', '#7E00B9', '#4B4B4B']}\n          preview={ribbon}\n          linkProps={{\n            link: '/work/ribbon-communications',\n            external: false\n          }}\n        />\n        <Card\n          title='Making Saving Cindi’s Website'\n          subtitle='Website Designer & Developer'\n          themeColors={['#00C9E4', '#D804A9']}\n          preview={savingCindi}\n          linkProps={{\n            link: '/work/saving-cindi',\n            external: false\n          }}\n        />\n      </CardList>\n    </WorkContainer>\n    <ContactPrompt theme='red'>\n      <h1>Don’t be shy, shoot me a message!</h1>\n      <p>I’m always open to meeting new people. Let’s talk about anything.</p>\n      <Button color='var(--red)' label='More About Me' link='/about' />\n    </ContactPrompt>\n  </Layout>\n)\n\nexport default WorkPage\n","module.exports = __webpack_public_path__ + \"static/cuHacking-preview-53d0882f92431d0de2ecc5713b59afd6.jpg\";","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDownload, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst genericButton = css`\n  border: 2px solid var(--grey);\n  background-color: var(--bkg);\n  color: var(--grey);\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n  font-weight: 600;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.75rem 1rem;\n\n  user-select: none;\n`\n\nconst DisabledButton = styled.div`\n  ${genericButton}\n`\n\nconst enabledButton = css`\n  ${genericButton}\n\n  color: var(--text);\n  border-color: var(--text);\n\n  transition: 0.1s ease-in;\n`\n\nconst StyledButton = styled.button<{ color: string; whiteTextHover: boolean }>`\n  ${enabledButton}\n\n  @media only screen and (min-width: 700px) {\n    &:hover {\n      background-color: ${(props) => props.color};\n      color: ${(props) => (props.whiteTextHover ? 'var(--white)' : 'var(--black)')};\n      cursor: pointer;\n    }\n  }\n`\n\nconst StyledLink = styled(Link)<{ color: string; whiteTextHover: boolean }>`\n  ${enabledButton}\n\n  @media only screen and (min-width: 700px) {\n    &:hover {\n      background-color: ${(props) => props.color};\n      color: ${(props) => (props.whiteTextHover ? 'var(--white)' : 'var(--black)')};\n    }\n  }\n`\n\nconst StyledAnchor = styled.a<{ color: string; whiteTextHover: boolean }>`\n  ${enabledButton}\n\n  @media only screen and (min-width: 700px) {\n    &:hover {\n      background-color: ${(props) => props.color};\n      color: ${(props) => (props.whiteTextHover ? 'var(--white)' : 'var(--black)')};\n    }\n  }\n`\n\nconst StyledIcon = styled(FontAwesomeIcon)`\n  margin-left: 10px;\n  margin-top: -2px;\n  margin-right: -5px;\n`\n\ninterface ButtonProps {\n  className?: string\n  color: string\n  whiteTextHover?: boolean\n  download?: boolean\n  external?: boolean\n  disabled?: boolean\n  label?: string\n  link?: string\n  action?: () => void\n}\n\nconst Button = (props: ButtonProps) => {\n  if (props.disabled) {\n    return <DisabledButton {...props}>{props.label}</DisabledButton>\n  } else if (!props.link) {\n    return (\n      <StyledButton\n        className={props.className}\n        color={props.color}\n        whiteTextHover={!!props.whiteTextHover}\n        onClick={props.action}\n        {...props}\n      >\n        {props.label}\n      </StyledButton>\n    )\n  } else if (props.external || props.download) {\n    return (\n      <StyledAnchor\n        className={props.className}\n        target='_blank'\n        rel='noopener noreferrer external'\n        href={props.link}\n        color={props.color}\n        whiteTextHover={!!props.whiteTextHover}\n        download={props.download}\n        {...props}\n      >\n        {props.label}\n        <StyledIcon icon={props.download ? faDownload : faExternalLinkAlt} size='1x' />\n      </StyledAnchor>\n    )\n  }\n  return (\n    <StyledLink\n      className={props.className}\n      to={props.link}\n      color={props.color}\n      whiteTextHover={!!props.whiteTextHover}\n      {...props}\n    >\n      {props.label}\n    </StyledLink>\n  )\n}\n\nexport default Button\n","module.exports = __webpack_public_path__ + \"static/ribbon-preview-c2722135d0809525e13b030f91a8fd11.svg\";","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","module.exports = __webpack_public_path__ + \"static/cuHacking-2020-preview-505caa9cfcee8c795d35b34253167489.jpg\";"],"sourceRoot":""}