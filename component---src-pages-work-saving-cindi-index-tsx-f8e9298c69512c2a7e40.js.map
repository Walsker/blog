{"version":3,"sources":["webpack:///./.yarn/unplugged/core-js-npm-2.6.11-15178ded27/node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/contactPrompt/loadingSpinner.tsx","webpack:///./src/components/contactPrompt/form.tsx","webpack:///./src/components/contactPrompt/index.tsx","webpack:///./src/components/button.tsx","webpack:///./src/pages/work/saving-cindi/saving-cindi-cover.jpg","webpack:///./src/pages/work/saving-cindi/index.tsx","webpack:///./.yarn/unplugged/core-js-npm-2.6.11-15178ded27/node_modules/core-js/modules/_string-html.js"],"names":["createHTML","url","this","LoadingSpinner","props","width","height","viewBox","stroke","fill","fillRule","color","strokeWidth","cx","cy","r","attributeName","begin","dur","values","calcMode","keyTimes","keySplines","repeatCount","containerStyle","css","FormContainer","styled","form","RegularContainer","Field","label","Input","input","TextArea","textarea","Button","button","FormMessage","p","Form","useState","formState","setFormState","theme","action","method","onSubmit","event","preventDefault","currentTarget","formData","FormData","xhr","XMLHttpRequest","console","log","open","onload","status","reset","send","id","required","name","type","rows","StyledDiv","div","Dialogue","ContactPrompt","children","genericButton","DisabledButton","enabledButton","StyledButton","whiteTextHover","StyledLink","Link","StyledAnchor","a","StyledIcon","FontAwesomeIcon","disabled","link","external","download","className","target","rel","href","icon","faDownload","faExternalLinkAlt","size","to","onClick","module","exports","CoverImage","coverUrl","Page","AttributesPane","Attribute","Description","Showcase","title","description","$export","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"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","file":"component---src-pages-work-saving-cindi-index-tsx-f8e9298c69512c2a7e40.js","sourcesContent":["'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","// By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL\n// Modified to support a color prop\n\nimport React from 'react'\n\nconst LoadingSpinner = (props: { color: string }) => {\n  return (\n    <svg width={44} height={44} viewBox='0 0 44 44' stroke='#fff' {...props}>\n      <g fill='none' fillRule='evenodd' stroke={props.color} strokeWidth={2}>\n        <circle cx={22} cy={22} r={1}>\n          <animate\n            attributeName='r'\n            begin='0s'\n            dur='1.8s'\n            values='1; 20'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.165, 0.84, 0.44, 1'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='stroke-opacity'\n            begin='0s'\n            dur='1.8s'\n            values='1; 0'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.3, 0.61, 0.355, 1'\n            repeatCount='indefinite'\n          />\n        </circle>\n        <circle cx={22} cy={22} r={1}>\n          <animate\n            attributeName='r'\n            begin='-0.9s'\n            dur='1.8s'\n            values='1; 20'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.165, 0.84, 0.44, 1'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='stroke-opacity'\n            begin='-0.9s'\n            dur='1.8s'\n            values='1; 0'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.3, 0.61, 0.355, 1'\n            repeatCount='indefinite'\n          />\n        </circle>\n      </g>\n    </svg>\n  )\n}\n\nexport default LoadingSpinner\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { ThemeColor } from 'src/types'\nimport LoadingSpinner from './loadingSpinner'\n\nconst containerStyle = css`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  padding: 5vw;\n  width: calc(var(--mobile-width) - 10vw);\n  min-height: 420px;\n\n  @media only screen and (min-width: 700px) {\n    padding: 35px 40px;\n    width: 300px;\n    min-height: 460px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 355px;\n  }\n`\n\nconst FormContainer = styled.form<{ color: string }>`\n  ${containerStyle}\n  align-items: flex-start;\n  justify-content: space-between;\n\n  background-color: ${(props) => props.color};\n`\n\nconst RegularContainer = styled.form<{ color: string }>`\n  ${containerStyle}\n  align-items: center;\n  justify-content: center;\n\n  background-color: ${(props) => props.color};\n\n  /* color: var(--white); */\n  color: ${(props) => (props.color === 'var(--yellow)' ? `var(--black)` : `var(--white)`)};\n`\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  width: 100%;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1rem;\n  font-weight: 600;\n`\n\nconst Input = styled.input`\n  margin: 5px 0;\n  padding: 0.5rem;\n\n  border: 2px solid var(--black);\n  border-radius: 0;\n  background-color: #ffffff;\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n`\n\nconst TextArea = styled.textarea`\n  resize: none;\n  margin-top: 5px;\n  margin-bottom: -5px;\n  padding: 0.5rem;\n\n  border: 2px solid var(--black);\n  border-radius: 0;\n  background-color: #ffffff;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1.125rem;\n`\n\nconst Button = styled.button<{ color: string }>`\n  margin-top: 5vw;\n  padding: 0.75rem 1rem;\n\n  border: 2px solid var(--text);\n  background-color: var(--bkg);\n  color: var(--text);\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n  font-weight: 600;\n\n  transition: 0.1s ease-in;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => props.color};\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-top: 35px;\n  }\n`\nconst FormMessage = styled.p`\n  text-align: center;\n  font-size: 1.125rem;\n\n  @media only screen and (min-width: 700px) {\n    font-size: 1.4rem;\n  }\n`\n\ninterface Props {\n  theme: ThemeColor\n}\n\nconst Form = (props: Props) => {\n  const [formState, setFormState] = useState<'idle' | 'loading' | 'submitted' | 'failed'>('idle')\n\n  // See: https://usebasin.com/docs/features/ajax\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    setFormState('loading')\n\n    const { currentTarget: form } = event\n\n    let formData = new FormData(form)\n    let xhr = new XMLHttpRequest()\n\n    console.log('data:', formData)\n    xhr.open('POST', form.action, true)\n\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        setFormState('submitted')\n        form.reset()\n      } else {\n        setFormState('failed')\n      }\n    }\n\n    xhr.send(formData)\n  }\n\n  switch (formState) {\n    case 'idle':\n      return (\n        <FormContainer\n          color={`var(--${props.theme})`}\n          action='https://usebasin.com/f/9d85adb927f2'\n          method='POST'\n          onSubmit={submitForm}\n          id='blog-contact-form'\n        >\n          <Field>\n            Name\n            <Input required name='name' type='text' />\n          </Field>\n          <Field>\n            Email\n            <Input required name='email' type='email' />\n          </Field>\n          <Field>\n            Message\n            <TextArea required name='message' rows={7}></TextArea>\n          </Field>\n          <Button type='submit' color={`var(--${props.theme})`}>\n            Send Message\n          </Button>\n        </FormContainer>\n      )\n    case 'loading':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <LoadingSpinner color={props.theme === 'yellow' ? `var(--black)` : `var(--white)`} />\n        </RegularContainer>\n      )\n    case 'submitted':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <FormMessage>\n            Thanks!\n            <br />\n            We'll be in touch. 🙂\n          </FormMessage>\n        </RegularContainer>\n      )\n    case 'failed':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <FormMessage>\n            Something went wrong. 😶\n            <br />\n            Please try again later.\n          </FormMessage>\n        </RegularContainer>\n      )\n  }\n}\n\nexport default Form\n","import React from 'react'\nimport styled from 'styled-components'\nimport Form from './form'\n\nimport { ThemeColor } from 'src/types'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: var(--mobile-width);\n  margin-top: 75px;\n  margin-bottom: 50px;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    margin-top: 150px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst Dialogue = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  margin-bottom: 50px;\n\n  h1 {\n    margin: 0;\n    font-family: 'Inter', sans-serif;\n  }\n\n  p {\n    margin: 20px 0;\n\n    font-family: 'Open Sans', sans-serif;\n    font-size: 1.25rem;\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-right: 5vw;\n\n    p {\n      margin: 10px 0 30px;\n      font-size: 1.5rem;\n    }\n  }\n`\n\ninterface Props {\n  theme: ThemeColor\n  children: React.ReactNode\n}\n\nconst ContactPrompt = (props: Props) => (\n  <StyledDiv>\n    <Dialogue>{props.children}</Dialogue>\n    <Form theme={props.theme} />\n  </StyledDiv>\n)\n\nexport default ContactPrompt\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { Link } from 'gatsby'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faDownload, faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst genericButton = css`\n  border: 2px solid var(--grey);\n  background-color: var(--bkg);\n  color: var(--grey);\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n  font-weight: 600;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.75rem 1rem;\n\n  user-select: none;\n`\n\nconst DisabledButton = styled.div`\n  ${genericButton}\n`\n\nconst enabledButton = css`\n  ${genericButton}\n\n  color: var(--text);\n  border-color: var(--text);\n\n  transition: 0.1s ease-in;\n`\n\nconst StyledButton = styled.button<{ color: string; whiteTextHover: boolean }>`\n  ${enabledButton}\n\n  @media only screen and (min-width: 700px) {\n    &:hover {\n      background-color: ${(props) => props.color};\n      color: ${(props) => (props.whiteTextHover ? 'var(--white)' : 'var(--black)')};\n      cursor: pointer;\n    }\n  }\n`\n\nconst StyledLink = styled(Link)<{ color: string; whiteTextHover: boolean }>`\n  ${enabledButton}\n\n  @media only screen and (min-width: 700px) {\n    &:hover {\n      background-color: ${(props) => props.color};\n      color: ${(props) => (props.whiteTextHover ? 'var(--white)' : 'var(--black)')};\n    }\n  }\n`\n\nconst StyledAnchor = styled.a<{ color: string; whiteTextHover: boolean }>`\n  ${enabledButton}\n\n  @media only screen and (min-width: 700px) {\n    &:hover {\n      background-color: ${(props) => props.color};\n      color: ${(props) => (props.whiteTextHover ? 'var(--white)' : 'var(--black)')};\n    }\n  }\n`\n\nconst StyledIcon = styled(FontAwesomeIcon)`\n  margin-left: 10px;\n  margin-top: -2px;\n  margin-right: -5px;\n`\n\ninterface ButtonProps {\n  className?: string\n  color: string\n  whiteTextHover?: boolean\n  download?: boolean\n  external?: boolean\n  disabled?: boolean\n  label?: string\n  link?: string\n  action?: () => void\n}\n\nconst Button = (props: ButtonProps) => {\n  if (props.disabled) {\n    return <DisabledButton {...props}>{props.label}</DisabledButton>\n  } else if (!props.link) {\n    return (\n      <StyledButton\n        className={props.className}\n        color={props.color}\n        whiteTextHover={!!props.whiteTextHover}\n        onClick={props.action}\n        {...props}\n      >\n        {props.label}\n      </StyledButton>\n    )\n  } else if (props.external || props.download) {\n    return (\n      <StyledAnchor\n        className={props.className}\n        target='_blank'\n        rel='noopener noreferrer external'\n        href={props.link}\n        color={props.color}\n        whiteTextHover={!!props.whiteTextHover}\n        download={props.download}\n        {...props}\n      >\n        {props.label}\n        <StyledIcon icon={props.download ? faDownload : faExternalLinkAlt} size='1x' />\n      </StyledAnchor>\n    )\n  }\n  return (\n    <StyledLink\n      className={props.className}\n      to={props.link}\n      color={props.color}\n      whiteTextHover={!!props.whiteTextHover}\n      {...props}\n    >\n      {props.label}\n    </StyledLink>\n  )\n}\n\nexport default Button\n","module.exports = __webpack_public_path__ + \"static/saving-cindi-cover-3088e36cf7d3c52dcc4df271c92396dd.jpg\";","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Button } from 'components'\nimport Layout from 'components/layout'\nimport SEO from 'components/seo'\n\nimport coverUrl from './saving-cindi-cover.jpg'\n\nconst CoverImage = styled.div`\n  width: 100vw;\n  height: 200px;\n  border-top: 2px solid var(--black);\n  border-bottom: 2px solid var(--black);\n  background: center / cover no-repeat url(${coverUrl});\n\n  @media only screen and (min-width: 700px) {\n    margin-bottom: 35px;\n    height: 300px;\n  }\n  @media only screen and (min-width: 1200px) {\n    height: 400px;\n  }\n`\n\nconst Page = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: var(--mobile-width);\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst AttributesPane = styled.div<{ color: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: calc(var(--mobile-width) - 10vw);\n\n  padding: 5vw 5vw 0;\n  margin: 5vw 0;\n\n  background-color: ${(props) => props.color};\n\n  @media only screen and (min-width: 700px) {\n    flex-shrink: 0;\n    width: 200px;\n    margin: 0 5vw 0 0;\n    padding: 35px 40px 0;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 320px;\n    margin: 0 40px 0 0;\n  }\n`\n\nconst Attribute = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  margin-bottom: 20px;\n\n  h2 {\n    font-family: 'Inter', sans-serif;\n    font-size: 1.5rem;\n    font-weight: bold;\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-bottom: 35px;\n  }\n`\n\nconst Description = styled.div`\n  h1 {\n    font-family: 'Inter', sans-serif;\n  }\n\n  @media only screen and (min-width: 700px) {\n    p {\n      font-size: 1.25rem;\n    }\n  }\n`\n\nconst StyledButton = styled(Button)`\n  margin-bottom: 5vw;\n\n  @media only screen and (min-width: 700px) {\n    margin-bottom: 35px;\n  }\n`\n\nconst Showcase = () => (\n  <Layout>\n    <SEO\n      title='Saving Cindi'\n      description='A magnificent band from Ottawa, Canada. Focused on delivering powerful R&B, Soul, and Jazz, they’re a group to be on the lookout for! Last year their audience began to grow significantly, so naturally they wanted to claim a permanent space on the internet for their advertisment. Hence, I was tasked with making their website.'\n    />\n    <CoverImage />\n    <Page>\n      <AttributesPane color='#00C9E4'>\n        <Attribute>\n          <h2>Timeline</h2>\n          <p>September 2019 - October 2019</p>\n        </Attribute>\n        <Attribute>\n          <h2>Role</h2>\n          <p>Software Developer (Intern)</p>\n        </Attribute>\n        <Attribute>\n          <h2>Technologies</h2>\n          <p>JavaScript, Express.js, WebSocket</p>\n        </Attribute>\n        <StyledButton color='#00C9E4' label='View Website' external link='https://savingcindi.com' />\n      </AttributesPane>\n      <Description>\n        <h1>Making Saving Cindi’s Website</h1>\n        <p>\n          A magnificent band from Ottawa, Canada. Focused on delivering powerful R&B, Soul, and Jazz, they’re a group to\n          be on the lookout for!\n          <br />\n          <br />\n          Last year their audience began to grow significantly, so naturally, they wanted to claim a permanent space on\n          the internet to establish their presence. Hence, I was tasked with making their website.\n        </p>\n      </Description>\n    </Page>\n  </Layout>\n)\n\nexport default Showcase\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}