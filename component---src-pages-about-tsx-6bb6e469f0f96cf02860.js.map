{"version":3,"sources":["webpack:///./src/components/moodBoard.tsx","webpack:///./src/pages/about.tsx","webpack:///./src/components/inlineExternalAnchor.tsx","webpack:///./src/components/contactPrompt/loadingSpinner.tsx","webpack:///./src/components/contactPrompt/form.tsx","webpack:///./src/components/contactPrompt/index.tsx"],"names":["Container","styled","div","Prompt","p","Tiles","Tile","TileToG","TileKota","TileDefund","TileMeasured","TileSong","TilePrestige","TileMeme","SpotifyDiv","SpotifyFrame","src","width","height","frameBorder","allow","MoodBoard","images","fluid","anime","childImageSharp","link","style","display","textAlign","marginTop","cake","StyledLink","Link","ProfileDiv","IntroText","UpdateDiv","ProfileImage","Img","AcImage","Dialogue","section","Adjective","word","adjectives","useState","index","select","useInterval","length","query","AboutPage","data","title","description","profile","alt","to","animalCrossing","theme","color","label","StyledAnchor","a","StyledIcon","FontAwesomeIcon","ExternalLink","props","target","rel","href","children","icon","faExternalLinkAlt","size","LoadingSpinner","viewBox","stroke","fill","fillRule","strokeWidth","cx","cy","r","attributeName","begin","dur","values","calcMode","keyTimes","keySplines","repeatCount","containerStyle","css","FormContainer","form","RegularContainer","Field","Input","input","TextArea","textarea","Button","button","FormMessage","Form","formState","setFormState","action","method","onSubmit","event","preventDefault","currentTarget","formData","FormData","xhr","XMLHttpRequest","console","log","open","onload","status","reset","send","id","required","name","type","rows","StyledDiv","ContactPrompt"],"mappings":"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","file":"component---src-pages-about-tsx-6bb6e469f0f96cf02860.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nimport ExternalLink from './inlineExternalAnchor'\n\nconst Container = styled.div`\n  width: var(--mobile-width);\n\n  margin-bottom: 50px;\n\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 100px;\n    max-width: var(--desktop-width);\n  }\n`\n\nconst Prompt = styled.p`\n  @media only screen and (min-width: 700px) {\n    max-width: 600px;\n    font-size: 1.25rem;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    font-size: 1.5rem;\n  }\n`\n\nconst Tiles = styled.div`\n  overflow: visible;\n  column-count: 1;\n\n  @media only screen and (min-width: 700px) {\n    column-count: 2;\n    column-gap: 20px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 20px;\n  }\n`\n\nconst Tile = styled.div`\n  padding: 5vw;\n  margin-bottom: 5vw;\n\n  border: 2px solid var(--black);\n\n  h3 {\n    margin: 0;\n    font-family: 'Inter', sans-serif;\n    font-weight: bold;\n    font-size: 1.5rem;\n    font-style: italic;\n  }\n\n  h3 strong {\n    font-weight: bold;\n    background-color: var(--green);\n  }\n\n  p {\n    margin: 33px 0 0 0;\n  }\n\n  p strong {\n    font-weight: normal;\n    font-style: italic;\n  }\n\n  @media only screen and (min-width: 700px) {\n    display: inline-block;\n    margin-bottom: 20px;\n    padding: 33px 38px;\n    width: calc(45vw - 90px); /** idk why this works, it should be 45vw - 20px - 100px */\n  }\n\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 0;\n    width: unset;\n\n    display: flex;\n    flex-direction: column;\n  }\n`\n\nconst TileToG = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 1 / 2;\n    grid-row: 1 / 3;\n  }\n`\n\nconst TileKota = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 2 / 4;\n    grid-row: 1 / 2;\n  }\n`\n\nconst TileDefund = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 1 / 2;\n    grid-row: 3 / 4;\n  }\n`\n\nconst TileMeasured = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 2 / 3;\n    grid-row: 2 / 4;\n  }\n`\n\nconst TileSong = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 3 / 4;\n    grid-row: 2 / 7;\n  }\n`\n\nconst TilePrestige = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 1 / 2;\n    grid-row: 4 / 9;\n  }\n`\n\nconst TileMeme = styled(Tile)`\n  @media only screen and (min-width: 1200px) {\n    grid-column: 2 / 3;\n    grid-row: 4 / 8;\n  }\n`\n\nconst SpotifyDiv = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  padding-top: 126.6%;\n\n  iframe {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n    height: 100%;\n  }\n`\n\nconst SpotifyFrame = () => (\n  <SpotifyDiv>\n    <iframe\n      src='https://open.spotify.com/embed/track/3nGhp4FuIaitNYn4s7XHaX'\n      width='100%'\n      height='100%'\n      frameBorder={0}\n      allow='encrypted-media'\n    />\n  </SpotifyDiv>\n)\n\nconst MoodBoard = () => {\n  const images = useStaticQuery(graphql`\n    query {\n      anime: file(relativePath: { eq: \"greatest-anime-betrayal.png\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      cake: file(relativePath: { eq: \"cake.jpg\" }) {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <Container>\n      <Prompt>If I were to summarize what’s been on my mind, it would look something like...</Prompt>\n      <Tiles>\n        <TileToG>\n          <Img fluid={images.anime.childImageSharp.fluid} />\n          <p>\n            This scene from <strong>Tower of God</strong> is the greatest anime betrayal of all time. Prove me wrong.\n          </p>\n        </TileToG>\n        <TileKota>\n          <h3>\n            “If I say I love you then that's where it ends\n            <br />\n            You don't gotta have a title just to be my friend\n            <br />\n            You can have it all, I won't ask you for a damn thing\n            <br />\n            Welcome to my table, <strong>it don't matter what you can't bring</strong>”\n          </h3>\n          <ExternalLink\n            link='https://open.spotify.com/track/5av7NCtwaAsID0TJylcSD4?si=iPQBu256RkmQaO-tUmSyMQ'\n            style={{ display: 'inline-block', textAlign: 'right', marginTop: '10px' }}\n          >\n            <cite>Solar Return by Kota the Friend</cite>\n          </ExternalLink>\n        </TileKota>\n        <TileDefund>\n          <h3>Defund the Police</h3>\n          <p>\n            Check out these flyers about{' '}\n            <ExternalLink link='https://drive.google.com/drive/folders/1HUpCPvOwUJElxtUP4mCysAY9GyZrSmUk?usp=sharing'>\n              <cite>alternatives to policing</cite>\n            </ExternalLink>{' '}\n            to see what this might look like.\n          </p>\n        </TileDefund>\n        <TilePrestige>\n          <h3>\n            “But at campus career centers, students are struggling with the dual, and sometimes dueling, desires for{' '}\n            <strong>prestige and purpose</strong>.\"\n          </h3>\n          <p>\n            <ExternalLink link='https://nyti.ms/2NerVLW'>\n              <cite>‘Techlash’ Hits College Campuses</cite>\n            </ExternalLink>{' '}\n            is a short article that describes an attitude developing on campuses that I’ve sympathized with a lot. If\n            you’re a student like me who will soon have to depart into the “real world”, I highly suggest giving it a\n            quick read.\n          </p>\n        </TilePrestige>\n        <TileMeasured>\n          <h3>\n            <strong>“What isn’t measured, isn’t managed.”</strong>\n          </h3>\n          <p>\n            This quote has been said by many and has shown itself in different forms, however the person I heard it from\n            was Bukola on her YouTube channel,{' '}\n            <ExternalLink link='https://www.youtube.com/channel/UC-bFgwL_kFKLZA60AiB-CCQ'>\n              <cite>The Come Up</cite>\n            </ExternalLink>\n            . She talks about some stuff that I personally find helpful on my professional journey.\n          </p>\n        </TileMeasured>\n        <TileSong>\n          <SpotifyFrame />\n          <p>\n            The song I currently have on repeat. I’m constantly searching for new music, so if there’s something you\n            think I’d like send it my way.\n          </p>\n          <p>\n            <ExternalLink link='https://open.spotify.com/user/pl1vqeducjzg0mwrciopnvlmo?si=zLempIPaTkayR4MkjojB2g'>\n              Check out my Spotify\n            </ExternalLink>\n          </p>\n        </TileSong>\n        <TileMeme>\n          <Img fluid={images.cake.childImageSharp.fluid} />\n\n          <p>\n            <ExternalLink link='https://twitter.com/tasty/status/1280966608933003264'>context</ExternalLink>\n          </p>\n        </TileMeme>\n      </Tiles>\n    </Container>\n  )\n}\n\nexport default MoodBoard\n","import React, { useState } from 'react'\nimport { Link, graphql, PageProps } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nimport { Button, ContactPrompt, Layout, SEO } from 'components'\nimport MoodBoard from 'components/moodBoard'\nimport { useInterval } from 'hooks'\n\nconst StyledLink = styled(Link)`\n  text-decoration: underline;\n`\n\nconst ProfileDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  width: var(--mobile-width);\n  margin-bottom: 50px;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst IntroText = styled.div`\n  margin: 20px 0;\n  background-color: var(--green);\n\n  font-size: 1.2rem;\n  text-align: center;\n\n  h1 {\n    font-family: 'Inter', sans-serif;\n    font-weight: 700;\n    font-size: 2rem;\n\n    span {\n      color: var(--white);\n      font-weight: 900;\n    }\n  }\n\n  @media only screen and (min-width: 700px) {\n    padding: 35px 40px;\n    text-align: right;\n\n    h1 {\n      margin: 0;\n      font-size: 2.25rem;\n    }\n\n    p {\n      margin: 20px 0 0 0;\n    }\n  }\n\n  @media only screen and (min-width: 1200px) {\n    font-size: 1.5rem;\n\n    h1 {\n      font-size: 3rem;\n    }\n\n    p {\n      margin: 35px 0 0 0;\n    }\n  }\n`\n\nconst UpdateDiv = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n\n  width: var(--mobile-width);\n\n  text-align: left;\n  font-size: 1rem;\n\n  margin-bottom: 50px;\n\n  h2 {\n    font-family: 'Inter', sans-serif;\n    font-weight: 700;\n    font-size: 1.5rem;\n  }\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n    justify-content: space-between;\n    text-align: left;\n    font-size: 1.2rem;\n\n    border: 2px solid var(--black);\n    padding: 33px 38px;\n    width: calc(var(--mobile-width) - 80px);\n\n    h2 {\n      font-size: 1.75rem;\n    }\n  }\n\n  @media only screen and (min-width: 1200px) {\n    font-size: 1.5rem;\n    max-width: calc(var(--desktop-width) - 80px);\n\n    h2 {\n      font-size: 2rem;\n    }\n  }\n`\n\nconst ProfileImage = styled(Img)`\n  flex-shrink: 0;\n\n  width: 80vw;\n  height: 80vw;\n\n  @media only screen and (min-width: 700px) {\n    width: 200px;\n    height: 272px;\n    margin-right: 30px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 355px;\n    height: 482.4px;\n    margin-right: 50px;\n  }\n`\n\nconst AcImage = styled(Img)`\n  flex-shrink: 0;\n\n  width: 80vw;\n  height: 80vw;\n\n  @media only screen and (min-width: 700px) {\n    width: 200px;\n    height: 200px;\n    margin-left: 30px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 320px;\n    height: 320px;\n    margin-right: 50px;\n  }\n`\n\nconst Dialogue = styled.section`\n  width: var(--mobile-width);\n\n  h2 {\n    font-family: 'Inter', sans-serif;\n    font-weight: 700;\n    font-size: 1.5rem;\n  }\n\n  @media only screen and (min-width: 700px) {\n    h2 {\n      font-size: 1.2rem;\n    }\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst Adjective = () => {\n  const adjectives = [\n    'Wal Wal',\n    'Wal Wal',\n    'Wal Wal',\n    'Wal Wal',\n    'passionate',\n    'smart',\n    'a bass vocalist',\n    'creative',\n    'hard-working',\n    'a Leo',\n    'friendly',\n    'motivated'\n  ]\n\n  const componentify = (word: string) => <span>{word}</span>\n  const [index, select] = useState(0)\n  useInterval(() => select((index + 1) % adjectives.length), 500)\n\n  return componentify(adjectives[index])\n}\n\nconst AboutPage = ({ data }: PageProps) => (\n  <Layout>\n    <SEO\n      title='About'\n      description={`Glad you would like to learn a little more about me! 😊 Before you ask - Yes, my first name is actually the\n            same as my last.`}\n    />\n    <ProfileDiv>\n      <ProfileImage fluid={data.profile.childImageSharp.fluid} alt='Profile picture' />\n      <IntroText>\n        <h1>\n          I am <Adjective />.\n        </h1>\n        <p>\n          Glad you would like to learn a little more about me! 😊 Before you ask - Yes, my first name is actually the\n          same as my last.\n        </p>\n      </IntroText>\n    </ProfileDiv>\n    <UpdateDiv>\n      <section>\n        <h2>🎯 What am I up to right now?</h2>\n        <ul>\n          <li>\n            I’ve started a <StyledLink to='/blog'>blog</StyledLink>!\n          </li>\n          <li>Making some cool stuff as Director of Development at cuHacking</li>\n          <li>Putting too many hours into Animal Crossing</li>\n          <li>Recently completed a full year at Ribbon Communications as an intern</li>\n        </ul>\n      </section>\n      <AcImage fluid={data.animalCrossing.childImageSharp.fluid} alt='Animal Crossing Character' />\n    </UpdateDiv>\n    <MoodBoard />\n    <Dialogue>\n      <h3>⌛ About my past </h3>\n      <p>\n        I'm a <strong>South Sudanese</strong> Canadian raised in Ottawa, and currently attending{' '}\n        <strong>Carleton University</strong> for <strong>Computer Science</strong> along with minor studies in\n        Entrepreneurship. In high school I was the kid who dipped their fingers into every club - I was the lead in\n        multiple school musicals, I was first clarinet in the concert band, and I handled the lights and sound for\n        assemblies and performances as part of the \"tech crew\". I was even on the student council once. 😅 Now at\n        Carleton I've (mostly) focused my many passions into <strong>programming</strong>.\n      </p>\n    </Dialogue>\n    <Dialogue>\n      <h3>Hold on, how did programming enter the picture? 🤔</h3>\n      <p>\n        I was fortunate enough that my high school offered Computer Science courses, of which I took three. They were\n        all game development focused, but they still opened that door for me which I didn't know existed. It wasn't\n        until my first hackathon (Random Hacks of Kindness, great hackathon by the way) in my first year of university\n        that I started branching out past game development.{' '}\n        <strong>\n          This is where I began to realize the limitless potential one carries with the ability to code and collaborate.\n        </strong>{' '}\n        Fast forward to today, now I do a little bit of everything when it comes to the tech industry - frontend,\n        backend, dev-ops-y stuff and even designing (funny how history repeats itself 🙈). Currently, I'm finding myself\n        in a more \"Project Manager\" type position with my current role at cuHacking.\n      </p>\n    </Dialogue>\n    <Dialogue>\n      <p>\n        Today, I'm in a constant search for new friends and collaborators. I've also discovered that my passion has{' '}\n        <strong>\n          more to do with the new and amazing things you get to make as a developer, rather than coding itself\n        </strong>\n        . Pair that and the love for collaboration and you get a character who is eager to make apps that are larger\n        than life itself...who then has to scale them back down to something reasonable. 🤷🏿‍♂️\n      </p>\n    </Dialogue>\n    <Dialogue>\n      <p>\n        Want to get in touch? The inbox is open so <strong>contact me below</strong>.\n      </p>\n    </Dialogue>\n    <ContactPrompt theme='green'>\n      <h1>Feeling inspired? Let’s talk about it.</h1>\n      <p>I’m always looking to act on new ideas, start new projects, or even just spill tea.</p>\n      <Button color='var(--green)' label='My Resume' link='/resume' />\n    </ContactPrompt>\n  </Layout>\n)\n\nexport default AboutPage\n\nexport const query = graphql`\n  query {\n    profile: file(relativePath: { eq: \"smirk-profile.jpg\" }) {\n      childImageSharp {\n        fluid(quality: 100) {\n          base64\n          aspectRatio\n          src\n          srcSet\n          sizes\n        }\n      }\n    }\n    animalCrossing: file(relativePath: { eq: \"ac-question.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst StyledAnchor = styled.a`\n  white-space: nowrap;\n  text-decoration: underline;\n`\n\nconst StyledIcon = styled(FontAwesomeIcon)`\n  margin-left: 0.25rem;\n`\n\ninterface LinkProps {\n  children: React.ReactNode\n  link: string\n  style?: any\n}\n\nconst ExternalLink = (props: LinkProps) => (\n  <StyledAnchor style={props.style} target='_blank' rel='noopener noreferrer external' href={props.link} {...props}>\n    {props.children}\n    <StyledIcon icon={faExternalLinkAlt} size='1x' />\n  </StyledAnchor>\n)\n\nexport default ExternalLink\n","// By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL\n// Modified to support a color prop\n\nimport React from 'react'\n\nconst LoadingSpinner = (props: { color: string }) => {\n  return (\n    <svg width={44} height={44} viewBox='0 0 44 44' stroke='#fff' {...props}>\n      <g fill='none' fillRule='evenodd' stroke={props.color} strokeWidth={2}>\n        <circle cx={22} cy={22} r={1}>\n          <animate\n            attributeName='r'\n            begin='0s'\n            dur='1.8s'\n            values='1; 20'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.165, 0.84, 0.44, 1'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='stroke-opacity'\n            begin='0s'\n            dur='1.8s'\n            values='1; 0'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.3, 0.61, 0.355, 1'\n            repeatCount='indefinite'\n          />\n        </circle>\n        <circle cx={22} cy={22} r={1}>\n          <animate\n            attributeName='r'\n            begin='-0.9s'\n            dur='1.8s'\n            values='1; 20'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.165, 0.84, 0.44, 1'\n            repeatCount='indefinite'\n          />\n          <animate\n            attributeName='stroke-opacity'\n            begin='-0.9s'\n            dur='1.8s'\n            values='1; 0'\n            calcMode='spline'\n            keyTimes='0; 1'\n            keySplines='0.3, 0.61, 0.355, 1'\n            repeatCount='indefinite'\n          />\n        </circle>\n      </g>\n    </svg>\n  )\n}\n\nexport default LoadingSpinner\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { ThemeColor } from 'src/types'\nimport LoadingSpinner from './loadingSpinner'\n\nconst containerStyle = css`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  padding: 5vw;\n  width: calc(var(--mobile-width) - 10vw);\n  min-height: 420px;\n\n  @media only screen and (min-width: 700px) {\n    padding: 35px 40px;\n    width: 300px;\n    min-height: 460px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    width: 355px;\n  }\n`\n\nconst FormContainer = styled.form<{ color: string }>`\n  ${containerStyle}\n  align-items: flex-start;\n  justify-content: space-between;\n\n  background-color: ${(props) => props.color};\n`\n\nconst RegularContainer = styled.form<{ color: string }>`\n  ${containerStyle}\n  align-items: center;\n  justify-content: center;\n\n  background-color: ${(props) => props.color};\n\n  /* color: var(--white); */\n  color: ${(props) => (props.color === 'var(--yellow)' ? `var(--black)` : `var(--white)`)};\n`\n\nconst Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n  width: 100%;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1rem;\n  font-weight: 600;\n`\n\nconst Input = styled.input`\n  margin: 5px 0;\n  padding: 0.5rem;\n\n  border: 2px solid var(--black);\n  border-radius: 0;\n  background-color: #ffffff;\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n`\n\nconst TextArea = styled.textarea`\n  resize: none;\n  margin-top: 5px;\n  margin-bottom: -5px;\n  padding: 0.5rem;\n\n  border: 2px solid var(--black);\n  border-radius: 0;\n  background-color: #ffffff;\n\n  font-family: 'Inter', sans-serif;\n  font-size: 1.125rem;\n`\n\nconst Button = styled.button<{ color: string }>`\n  margin-top: 5vw;\n  padding: 0.75rem 1rem;\n\n  border: 2px solid var(--text);\n  background-color: var(--bkg);\n  color: var(--text);\n\n  font-family: 'Open Sans', sans-serif;\n  font-size: 1.125rem;\n  font-weight: 600;\n\n  transition: 0.1s ease-in;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${(props) => props.color};\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-top: 35px;\n  }\n`\nconst FormMessage = styled.p`\n  text-align: center;\n  font-size: 1.125rem;\n\n  @media only screen and (min-width: 700px) {\n    font-size: 1.4rem;\n  }\n`\n\ninterface Props {\n  theme: ThemeColor\n}\n\nconst Form = (props: Props) => {\n  const [formState, setFormState] = useState<'idle' | 'loading' | 'submitted' | 'failed'>('idle')\n\n  // See: https://usebasin.com/docs/features/ajax\n  const submitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    setFormState('loading')\n\n    const { currentTarget: form } = event\n\n    let formData = new FormData(form)\n    let xhr = new XMLHttpRequest()\n\n    console.log('data:', formData)\n    xhr.open('POST', form.action, true)\n\n    xhr.onload = () => {\n      if (xhr.status === 200) {\n        setFormState('submitted')\n        form.reset()\n      } else {\n        setFormState('failed')\n      }\n    }\n\n    xhr.send(formData)\n  }\n\n  switch (formState) {\n    case 'idle':\n      return (\n        <FormContainer\n          color={`var(--${props.theme})`}\n          action='https://usebasin.com/f/9d85adb927f2'\n          method='POST'\n          onSubmit={submitForm}\n          id='blog-contact-form'\n        >\n          <Field>\n            Name\n            <Input required name='name' type='text' />\n          </Field>\n          <Field>\n            Email\n            <Input required name='email' type='email' />\n          </Field>\n          <Field>\n            Message\n            <TextArea required name='message' rows={7}></TextArea>\n          </Field>\n          <Button type='submit' color={`var(--${props.theme})`}>\n            Send Message\n          </Button>\n        </FormContainer>\n      )\n    case 'loading':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <LoadingSpinner color={props.theme === 'yellow' ? `var(--black)` : `var(--white)`} />\n        </RegularContainer>\n      )\n    case 'submitted':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <FormMessage>\n            Thanks!\n            <br />\n            We'll be in touch. 🙂\n          </FormMessage>\n        </RegularContainer>\n      )\n    case 'failed':\n      return (\n        <RegularContainer color={`var(--${props.theme})`}>\n          <FormMessage>\n            Something went wrong. 😶\n            <br />\n            Please try again later.\n          </FormMessage>\n        </RegularContainer>\n      )\n  }\n}\n\nexport default Form\n","import React from 'react'\nimport styled from 'styled-components'\nimport Form from './form'\n\nimport { ThemeColor } from 'src/types'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  width: var(--mobile-width);\n  margin-top: 75px;\n  margin-bottom: 50px;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n\n    margin-top: 150px;\n  }\n\n  @media only screen and (min-width: 1200px) {\n    max-width: var(--desktop-width);\n  }\n`\n\nconst Dialogue = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  margin-bottom: 50px;\n\n  h1 {\n    margin: 0;\n    font-family: 'Inter', sans-serif;\n  }\n\n  p {\n    margin: 20px 0;\n\n    font-family: 'Open Sans', sans-serif;\n    font-size: 1.25rem;\n  }\n\n  @media only screen and (min-width: 700px) {\n    margin-right: 5vw;\n\n    p {\n      margin: 10px 0 30px;\n      font-size: 1.5rem;\n    }\n  }\n`\n\ninterface Props {\n  theme: ThemeColor\n  children: React.ReactNode\n}\n\nconst ContactPrompt = (props: Props) => (\n  <StyledDiv>\n    <Dialogue>{props.children}</Dialogue>\n    <Form theme={props.theme} />\n  </StyledDiv>\n)\n\nexport default ContactPrompt\n"],"sourceRoot":""}