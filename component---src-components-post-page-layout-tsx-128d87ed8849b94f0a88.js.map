{"version":3,"sources":["webpack:///./.yarn/unplugged/core-js-npm-2.6.11-15178ded27/node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./src/components/postPageLayout.tsx","webpack:///./.yarn/$virtual/gatsby-plugin-mdx-virtual-210695e3c0/0/cache/gatsby-plugin-mdx-npm-1.2.28-e16e2d60a9-7cb3e574f6.zip/node_modules/gatsby-plugin-mdx/index.js","webpack:///./.yarn/$virtual/gatsby-plugin-mdx-virtual-210695e3c0/0/cache/gatsby-plugin-mdx-npm-1.2.28-e16e2d60a9-7cb3e574f6.zip/node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","length","$args","push","apply","proto","prototype","instance","Object","result","Function","call","shortcodes","Link","h1","props","style","color","Synopsis","styled","div","Tag","p","Title","Brief","Meta","Preview","Img","Content","PageTemplate","mdx","data","frontmatter","tags","toUpperCase","title","brief","fluid","cover","childImageSharp","date","readingTime","components","body","pageQuery","MDXRenderer","require","module","React","useMDXComponents","useMDXScope","scope","children","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn"],"mappings":"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","file":"component---src-components-post-page-layout-tsx-128d87ed8849b94f0a88.js","sourcesContent":["// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { MDXProvider } from '@mdx-js/react'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\n\nimport Layout from './layout'\n\n/* Here you can pass components down to Mdx so they don't need to be imported\n * You can also define how the regular markdown components are rendered.\n * See: https://www.gatsbyjs.org/packages/gatsby-plugin-mdx/?=mdx#components\n */\nconst shortcodes = { Link, h1: (props) => <h1 style={{ color: 'red' }} {...props} /> }\n\nconst Synopsis = styled.div``\n\nconst Tag = styled.p`\n  margin: 0;\n\n  color: var(--blue);\n\n  font-family: 'Inter', sans-serif;\n  font-weight: bold;\n  font-size: 0.9rem;\n\n  @media only screen and (min-width: 1200px) {\n    font-size: 1rem;\n  }\n`\n\nconst Title = styled.h1`\n  margin: 5px 0;\n`\n\nconst Brief = styled.p`\n  color: #888;\n  font-size: 1.1rem;\n  /* margin-bottom: 10vw; */\n\n  @media only screen and (min-width: 700px) {\n    /* margin-bottom: 35px; */\n  }\n  @media only screen and (min-width: 1200px) {\n    font-size: 1.25rem;\n  }\n`\n\nconst Meta = styled.p`\n  margin: 0;\n\n  color: var(--blue);\n\n  font-family: 'Inter', sans-serif;\n  font-weight: normal;\n  font-size: 0.8rem;\n\n  @media only screen and (min-width: 700px) {\n  }\n\n  @media only screen and (min-width: 1200px) {\n    position: unset;\n    font-size: 1rem;\n  }\n`\n\nconst Preview = styled(Img)`\n  margin: 30px 0 50px;\n  width: 100vw;\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  width: var(--mobile-width);\n`\n\nexport default function PageTemplate({ data: { mdx } }) {\n  return (\n    <Layout>\n      <article>\n        <Synopsis>\n          <Tag>{mdx.frontmatter.tags[0].toUpperCase()}</Tag>\n          <Title>{mdx.frontmatter.title}</Title>\n          <Brief>{mdx.frontmatter.brief}</Brief>\n          <Preview fluid={mdx.frontmatter.cover.childImageSharp.fluid} />\n          <Meta>\n            {mdx.frontmatter.date.toUpperCase()} â€¢ {mdx.frontmatter.readingTime} MIN READ\n          </Meta>\n        </Synopsis>\n        <Content>\n          <MDXProvider components={shortcodes}>\n            <MDXRenderer>{mdx.body}</MDXRenderer>\n          </MDXProvider>\n        </Content>\n      </article>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostQuery($id: String) {\n    mdx(id: { eq: $id }) {\n      id\n      body\n      frontmatter {\n        title\n        brief\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1200) {\n              base64\n              aspectRatio\n              src\n              srcSet\n              sizes\n            }\n          }\n        }\n        date(formatString: \"D MMM YYYY\")\n        readingTime\n        tags\n      }\n    }\n  }\n`\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}